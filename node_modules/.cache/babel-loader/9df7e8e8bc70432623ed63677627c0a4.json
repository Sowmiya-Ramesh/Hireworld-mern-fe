{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_POSTS,POST_ERROR,UPDATE_LIKES,DELETE_POST,ADD_POST,GET_POST,ADD_COMMENT,REMOVE_COMMENT}from'../actions/types';var initialState={posts:[],post:null,loading:true,error:{}};function postReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case GET_POSTS:return _objectSpread(_objectSpread({},state),{},{posts:payload,loading:false});case GET_POST:return _objectSpread(_objectSpread({},state),{},{post:payload,loading:false});case ADD_POST:return _objectSpread(_objectSpread({},state),{},{posts:[payload].concat(_toConsumableArray(state.posts)),loading:false});case DELETE_POST:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.filter(function(post){return post._id!==payload;}),loading:false});case POST_ERROR:return _objectSpread(_objectSpread({},state),{},{error:payload,loading:false});case UPDATE_LIKES:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===payload.id?_objectSpread(_objectSpread({},post),{},{likes:payload.likes}):post;}),loading:false});case ADD_COMMENT:return _objectSpread(_objectSpread({},state),{},{post:_objectSpread(_objectSpread({},state.post),{},{comments:payload}),loading:false});case REMOVE_COMMENT:return _objectSpread(_objectSpread({},state),{},{post:_objectSpread(_objectSpread({},state.post),{},{comments:state.post.comments.filter(function(comment){return comment._id!==payload;})}),loading:false});default:return state;}}export default postReducer;","map":{"version":3,"sources":["C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","postReducer","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":"6VAAA,OACEA,SADF,CAEEC,UAFF,CAGEC,YAHF,CAIEC,WAJF,CAKEC,QALF,CAMEC,QANF,CAOEC,WAPF,CAQEC,cARF,KASO,kBATP,CAWA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAEnBC,IAAI,CAAE,IAFa,CAGnBC,OAAO,CAAE,IAHU,CAInBC,KAAK,CAAE,EAJY,CAArB,CAOA,QAASC,CAAAA,WAAT,EAAmD,IAA9BC,CAAAA,KAA8B,2DAAtBN,YAAsB,IAARO,CAAAA,MAAQ,2CACjD,GAAQC,CAAAA,IAAR,CAA0BD,MAA1B,CAAQC,IAAR,CAAcC,OAAd,CAA0BF,MAA1B,CAAcE,OAAd,CAEA,OAAQD,IAAR,EACE,IAAKhB,CAAAA,SAAL,CACE,sCACKc,KADL,MAEEL,KAAK,CAAEQ,OAFT,CAGEN,OAAO,CAAE,KAHX,GAKF,IAAKN,CAAAA,QAAL,CACE,sCACKS,KADL,MAEEJ,IAAI,CAAEO,OAFR,CAGEN,OAAO,CAAE,KAHX,GAKF,IAAKP,CAAAA,QAAL,CACE,sCACKU,KADL,MAEEL,KAAK,EAAGQ,OAAH,4BAAeH,KAAK,CAACL,KAArB,EAFP,CAGEE,OAAO,CAAE,KAHX,GAKF,IAAKR,CAAAA,WAAL,CACE,sCACKW,KADL,MAEEL,KAAK,CAAEK,KAAK,CAACL,KAAN,CAAYS,MAAZ,CAAmB,SAACR,IAAD,QAAUA,CAAAA,IAAI,CAACS,GAAL,GAAaF,OAAvB,EAAnB,CAFT,CAGEN,OAAO,CAAE,KAHX,GAKF,IAAKV,CAAAA,UAAL,CACE,sCACKa,KADL,MAEEF,KAAK,CAAEK,OAFT,CAGEN,OAAO,CAAE,KAHX,GAKF,IAAKT,CAAAA,YAAL,CACE,sCACKY,KADL,MAEEL,KAAK,CAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAgB,SAACV,IAAD,QACrBA,CAAAA,IAAI,CAACS,GAAL,GAAaF,OAAO,CAACI,EAArB,gCAA+BX,IAA/B,MAAqCY,KAAK,CAAEL,OAAO,CAACK,KAApD,GAA8DZ,IADzC,EAAhB,CAFT,CAKEC,OAAO,CAAE,KALX,GAOF,IAAKL,CAAAA,WAAL,CACE,sCACKQ,KADL,MAEEJ,IAAI,gCAAOI,KAAK,CAACJ,IAAb,MAAmBa,QAAQ,CAAEN,OAA7B,EAFN,CAGEN,OAAO,CAAE,KAHX,GAKF,IAAKJ,CAAAA,cAAL,CACE,sCACKO,KADL,MAEEJ,IAAI,gCACCI,KAAK,CAACJ,IADP,MAEFa,QAAQ,CAAET,KAAK,CAACJ,IAAN,CAAWa,QAAX,CAAoBL,MAApB,CACR,SAACM,OAAD,QAAaA,CAAAA,OAAO,CAACL,GAAR,GAAgBF,OAA7B,EADQ,CAFR,EAFN,CAQEN,OAAO,CAAE,KARX,GAUF,QACE,MAAOG,CAAAA,KAAP,CAzDJ,CA2DD,CAED,cAAeD,CAAAA,WAAf","sourcesContent":["import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nfunction postReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          )\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postReducer;\r\n"]},"metadata":{},"sourceType":"module"}