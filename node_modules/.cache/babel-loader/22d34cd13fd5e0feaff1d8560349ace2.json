{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import{Link,Navigate}from'react-router-dom';import{setAlert}from'../../actions/alert';import{register}from'../../actions/auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenticated=_ref.isAuthenticated;var _useState=useState({name:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,password2=formData.password2;var onChange=function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(password!==password2){setAlert('Passwords do not match','danger');}else{register({name:name,email:email,password:password});}case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();if(isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"});}return/*#__PURE__*/_jsxs(\"section\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"large text-primary\",children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"lead\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user\"}),\" Create Your Account\"]}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:onChange})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:email,onChange:onChange}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text\",children:\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",value:password,onChange:onChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",name:\"password2\",value:password2,onChange:onChange})}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Register\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"my-1\",children:[\"Already have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Sign In\"})]})]});};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"sources":["C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/src/components/auth/Register.js"],"names":["React","useState","connect","Link","Navigate","setAlert","register","Register","isAuthenticated","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Navigate to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Create Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n          <small className=\"form-text\">\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n"]},"metadata":{},"sourceType":"module"}