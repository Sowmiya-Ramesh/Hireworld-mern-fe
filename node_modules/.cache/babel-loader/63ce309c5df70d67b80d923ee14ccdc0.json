{"ast":null,"code":"import React,{useEffect}from'react';import{Link,useParams}from'react-router-dom';import{connect}from'react-redux';import Spinner from'../layout/Spinner';import PostItem from'../posts/PostItem';import CommentForm from'../post/CommentForm';import CommentItem from'../post/CommentItem';import{getPost}from'../../actions/post';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Post=function Post(_ref){var getPost=_ref.getPost,_ref$post=_ref.post,post=_ref$post.post,loading=_ref$post.loading;var _useParams=useParams(),id=_useParams.id;useEffect(function(){getPost(id);},[getPost,id]);return loading||post===null?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(\"section\",{className:\"container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/posts\",className:\"btn\",children:\"Back To Posts\"}),/*#__PURE__*/_jsx(PostItem,{post:post,showActions:false}),/*#__PURE__*/_jsx(CommentForm,{postId:post._id}),/*#__PURE__*/_jsx(\"div\",{className:\"comments\",children:post.comments.map(function(comment){return/*#__PURE__*/_jsx(CommentItem,{comment:comment,postId:post._id},comment._id);})})]});};var mapStateToProps=function mapStateToProps(state){return{post:state.post};};export default connect(mapStateToProps,{getPost:getPost})(Post);","map":{"version":3,"sources":["C:/Users/Sowmiya RV/Desktop/Hire_World - Copy/client/src/components/post/Post.js"],"names":["React","useEffect","Link","useParams","connect","Spinner","PostItem","CommentForm","CommentItem","getPost","Post","post","loading","id","_id","comments","map","comment","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,OAASC,OAAT,KAAwB,oBAAxB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA0C,IAAvCD,CAAAA,OAAuC,MAAvCA,OAAuC,gBAA9BE,IAA8B,CAAtBA,IAAsB,WAAtBA,IAAsB,CAAhBC,OAAgB,WAAhBA,OAAgB,CACrD,eAAeT,SAAS,EAAxB,CAAQU,EAAR,YAAQA,EAAR,CACAZ,SAAS,CAAC,UAAM,CACdQ,OAAO,CAACI,EAAD,CAAP,CACD,CAFQ,CAEN,CAACJ,OAAD,CAAUI,EAAV,CAFM,CAAT,CAIA,MAAOD,CAAAA,OAAO,EAAID,IAAI,GAAK,IAApB,cACL,KAAC,OAAD,IADK,cAGL,iBAAS,SAAS,CAAC,WAAnB,wBACE,KAAC,IAAD,EAAM,EAAE,CAAC,QAAT,CAAkB,SAAS,CAAC,KAA5B,2BADF,cAIE,KAAC,QAAD,EAAU,IAAI,CAAEA,IAAhB,CAAsB,WAAW,CAAE,KAAnC,EAJF,cAKE,KAAC,WAAD,EAAa,MAAM,CAAEA,IAAI,CAACG,GAA1B,EALF,cAME,YAAK,SAAS,CAAC,UAAf,UACGH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkB,SAACC,OAAD,qBACjB,KAAC,WAAD,EAA+B,OAAO,CAAEA,OAAxC,CAAiD,MAAM,CAAEN,IAAI,CAACG,GAA9D,EAAkBG,OAAO,CAACH,GAA1B,CADiB,EAAlB,CADH,EANF,GAHF,CAgBD,CAtBD,CA6BA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCR,IAAI,CAAEQ,KAAK,CAACR,IADsB,CAAZ,EAAxB,CAIA,cAAeP,CAAAA,OAAO,CAACc,eAAD,CAAkB,CAAET,OAAO,CAAPA,OAAF,CAAlB,CAAP,CAAsCC,IAAtC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading } }) => {\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getPost(id);\r\n  }, [getPost, id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <section className=\"container\">\r\n      <Link to=\"/posts\" className=\"btn\">\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n"]},"metadata":{},"sourceType":"module"}